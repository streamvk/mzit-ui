{"version":3,"file":"dl-model-provider-month.d.ts","sources":["dl-model-provider-month.d.ts"],"names":[],"mappingssourcesContent":["/**\n * @license\n * Copyright 2013-present Dale Lotts All Rights Reserved.\n * http://www.dalelotts.com\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/dalelotts/angular-bootstrap-datetimepicker/blob/master/LICENSE\n */\nimport { SimpleChanges } from '@angular/core';\nimport { DlDateTimePickerModel } from './dl-date-time-picker-model';\nimport { DlModelProvider } from './dl-model-provider';\n/**\n * Default implementation for the `month` view.\n */\nexport declare class DlMonthModelProvider implements DlModelProvider {\n    /**\n     * Receives input changes detected by Angular.\n     *\n     * @param changes\n     *  the input changes detected by Angular.\n     */\n    onChanges(changes: SimpleChanges): void;\n    /**\n     * Returns the `month` model for the specified moment in `local` time with the\n     * `active` month set to the first day of the specified month.\n     *\n     * The `month` model represents a year (12 months) as three rows with four columns.\n     *\n     * The year always starts in January.\n     *\n     * Each cell represents midnight on the 1st day of the month.\n     *\n     * The `active` month will be the January of year of the specified milliseconds.\n     *\n     * @param milliseconds\n     *  the moment in time from which the month model will be created.\n     * @param selectedMilliseconds\n     *  the current value of the date/time picker.\n     * @returns\n     *  the model representing the specified moment in time.\n     */\n    getModel(milliseconds: number, selectedMilliseconds: number): DlDateTimePickerModel;\n    /**\n     * Move the active `month` one row `down` from the specified moment in time.\n     *\n     * Moving `down` can result in the `active` month being part of a different year than\n     * the specified `fromMilliseconds`, in this case the year represented by the model\n     * will change to show the correct year.\n     *\n     * @param fromMilliseconds\n     *  the moment in time from which the next `month` model `down` will be constructed.\n     * @param selectedMilliseconds\n     *  the current value of the date/time picker.\n     * @returns\n     *  model containing an `active` `month` one row `down` from the specified moment in time.\n     */\n    goDown(fromMilliseconds: number, selectedMilliseconds: number): DlDateTimePickerModel;\n    /**\n     * Move the active `month` one row `up` from the specified moment in time.\n     *\n     * Moving `up` can result in the `active` month being part of a different year than\n     * the specified `fromMilliseconds`, in this case the year represented by the model\n     * will change to show the correct year.\n     *\n     * @param fromMilliseconds\n     *  the moment in time from which the previous `month` model `up` will be constructed.\n     * @param selectedMilliseconds\n     *  the current value of the date/time picker.\n     * @returns\n     *  model containing an `active` `month` one row `up` from the specified moment in time.\n     */\n    goUp(fromMilliseconds: number, selectedMilliseconds: number): DlDateTimePickerModel;\n    /**\n     * Move the `active` `month` one (1) month to the `left` of the specified moment in time.\n     *\n     * Moving `left` can result in the `active` month being part of a different year than\n     * the specified `fromMilliseconds`, in this case the year represented by the model\n     * will change to show the correct year.\n     *\n     * @param fromMilliseconds\n     *  the moment in time from which the `month` model to the `left` will be constructed.\n     * @param selectedMilliseconds\n     *  the current value of the date/time picker.\n     * @returns\n     *  model containing an `active` `month` one month to the `left` of the specified moment in time.\n     */\n    goLeft(fromMilliseconds: number, selectedMilliseconds: number): DlDateTimePickerModel;\n    /**\n     * Move the `active` `month` one (1) month to the `right` of the specified moment in time.\n     *\n     * The `active` month will be `one (1) month after` the specified milliseconds.\n     * This moves the `active` date one month `right` in the current `month` view.\n     *\n     * Moving `right` can result in the `active` month being part of a different year than\n     * the specified `fromMilliseconds`, in this case the year represented by the model\n     * will change to show the correct year.\n     *\n     * @param fromMilliseconds\n     *  the moment in time from which the `month` model to the `right` will be constructed.\n     * @param selectedMilliseconds\n     *  the current value of the date/time picker.\n     * @returns\n     *  model containing an `active` `month` one year to the `right` of the specified moment in time.\n     */\n    goRight(fromMilliseconds: number, selectedMilliseconds: number): DlDateTimePickerModel;\n    /**\n     * Move the active `month` one year `down` from the specified moment in time.\n     *\n     * Paging `down` will result in the `active` month being part of a different year than\n     * the specified `fromMilliseconds`. As a result, the year represented by the model\n     * will change to show the correct year.\n     *\n     * @param fromMilliseconds\n     *  the moment in time from which the next `month` model page `down` will be constructed.\n     * @param selectedMilliseconds\n     *  the current value of the date/time picker.\n     * @returns\n     *  model containing an `active` `month` one year `down` from the specified moment in time.\n     */\n    pageDown(fromMilliseconds: number, selectedMilliseconds: number): DlDateTimePickerModel;\n    /**\n     * Move the active `month` one year `down` from the specified moment in time.\n     *\n     * Paging `up` will result in the `active` month being part of a different year than\n     * the specified `fromMilliseconds`. As a result, the year represented by the model\n     * will change to show the correct year.\n     *\n     * @param fromMilliseconds\n     *  the moment in time from which the next `month` model page `up` will be constructed.\n     * @param selectedMilliseconds\n     *  the current value of the date/time picker.\n     * @returns\n     *  model containing an `active` `month` one year `up` from the specified moment in time.\n     */\n    pageUp(fromMilliseconds: number, selectedMilliseconds: number): DlDateTimePickerModel;\n    /**\n     * Move the `active` `month` to `December` of the current year.\n     *\n     * The view or time range will not change unless the `fromMilliseconds` value\n     * is in a different year than the displayed decade.\n     *\n     * @param fromMilliseconds\n     *  the moment in time from which `December 1` will be calculated.\n     * @param selectedMilliseconds\n     *  the current value of the date/time picker.\n     * @returns\n     *  a model with the `December` cell in the view as the active `month`.\n     */\n    goEnd(fromMilliseconds: number, selectedMilliseconds: number): DlDateTimePickerModel;\n    /**\n     * Move the `active` `month` to `January` of the current year.\n     *\n     * The view or time range will not change unless the `fromMilliseconds` value\n     * is in a different year than the displayed decade.\n     *\n     * @param fromMilliseconds\n     *  the moment in time from which `January 1` will be calculated.\n     * @param selectedMilliseconds\n     *  the current value of the date/time picker.\n     * @returns\n     *  a model with the `January` cell in the view as the active `month`.\n     */\n    goHome(fromMilliseconds: number, selectedMilliseconds: number): DlDateTimePickerModel;\n}\n"]}