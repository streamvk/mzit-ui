{"version":3,"file":"dl-model-provider-year.d.ts","sources":["dl-model-provider-year.d.ts"],"names":[],"mappingssourcesContent":["/**\n * @license\n * Copyright 2013-present Dale Lotts All Rights Reserved.\n * http://www.dalelotts.com\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/dalelotts/angular-bootstrap-datetimepicker/blob/master/LICENSE\n */\nimport { SimpleChanges } from '@angular/core';\nimport { DlDateTimePickerModel } from './dl-date-time-picker-model';\nimport { DlModelProvider } from './dl-model-provider';\n/**\n * Default implementation for the `year` view.\n */\nexport declare class DlYearModelProvider implements DlModelProvider {\n    /**\n     * Create a moment at midnight january 1 at the start of the current decade.\n     * The start of the decade is always a year ending in zero.\n     *\n     * @param fromMilliseconds\n     *  the moment in time from which the start of the decade will be determined.\n     * @returns\n     *  moment at midnight january 1 at the start of the current decade.\n     * @internal\n     */\n    private static getStartOfDecade;\n    /**\n     * Receives input changes detected by Angular.\n     *\n     * @param changes\n     *  the input changes detected by Angular.\n     */\n    onChanges(changes: SimpleChanges): void;\n    /**\n     * Returns the `year` model for the specified moment in `local` time with the\n     * `active` year set to January 1 of the specified year.\n     *\n     * The `year` model represents a decade (10 years) as two rows with five columns.\n     *\n     * The decade always starts on a year ending with zero.\n     *\n     * Each cell represents midnight January 1 of the indicated year.\n     *\n     * The `active` year will be the January 1 of year of the specified milliseconds.\n     *\n     * @param milliseconds\n     *  the moment in time from which the year model will be created.\n     * @param selectedMilliseconds\n     *  the current value of the date/time picker.\n     * @returns\n     *  the model representing the specified moment in time.\n     */\n    getModel(milliseconds: number, selectedMilliseconds: number): DlDateTimePickerModel;\n    /**\n     * Move the active `year` one row `down` from the specified moment in time.\n     *\n     * The `active` year will be the January 1 `five (5) years after` the specified milliseconds.\n     * This moves the `active` date one row `down` in the current `year` view.\n     *\n     * Moving `down` can result in the `active` year being part of a different decade than\n     * the specified `fromMilliseconds`, in this case the decade represented by the model\n     * will change to show the correct decade.\n     *\n     * @param fromMilliseconds\n     *  the moment in time from which the next `year` model `down` will be constructed.\n     * @param selectedMilliseconds\n     *  the current value of the date/time picker.\n     * @returns\n     *  model containing an `active` `year` one row `down` from the specified moment in time.\n     */\n    goDown(fromMilliseconds: number, selectedMilliseconds: number): DlDateTimePickerModel;\n    /**\n     * Move the active `year` one row `up` from the specified moment in time.\n     *\n     * The `active` year will be the January 1 `five (5) years before` the specified milliseconds.\n     * This moves the `active` date one row `up` in the current `year` view.\n     *\n     * Moving `up` can result in the `active` year being part of a different decade than\n     * the specified `fromMilliseconds`, in this case the decade represented by the model\n     * will change to show the correct decade.\n     *\n     * @param fromMilliseconds\n     *  the moment in time from which the previous `year` model `up` will be constructed.\n     * @param selectedMilliseconds\n     *  the current value of the date/time picker.\n     * @returns\n     *  model containing an `active` `year` one row `up` from the specified moment in time.\n     */\n    goUp(fromMilliseconds: number, selectedMilliseconds: number): DlDateTimePickerModel;\n    /**\n     * Move the `active` `year` one (1) year to the `left` of the specified moment in time.\n     *\n     * The `active` year will be the January 1 `one (1) year before` the specified milliseconds.\n     * This moves the `active` date one year `left` in the current `year` view.\n     *\n     * Moving `left` can result in the `active` year being part of a different decade than\n     * the specified `fromMilliseconds`, in this case the decade represented by the model\n     * will change to show the correct decade.\n     *\n     * @param fromMilliseconds\n     *  the moment in time from which the `year` model to the `left` will be constructed.\n     * @param selectedMilliseconds\n     *  the current value of the date/time picker.\n     * @returns\n     *  model containing an `active` `year` one year to the `left` of the specified moment in time.\n     */\n    goLeft(fromMilliseconds: number, selectedMilliseconds: number): DlDateTimePickerModel;\n    /**\n     * Move the `active` `year` one (1) year to the `right` of the specified moment in time.\n     *\n     * The `active` year will be the January 1 `one (1) year after` the specified milliseconds.\n     * This moves the `active` date one year `right` in the current `year` view.\n     *\n     * Moving `right` can result in the `active` year being part of a different decade than\n     * the specified `fromMilliseconds`, in this case the decade represented by the model\n     * will change to show the correct decade.\n     *\n     * @param fromMilliseconds\n     *  the moment in time from which the `year` model to the `right` will be constructed.\n     * @param selectedMilliseconds\n     *  the current value of the date/time picker.\n     * @returns\n     *  model containing an `active` `year` one year to the `right` of the specified moment in time.\n     */\n    goRight(fromMilliseconds: number, selectedMilliseconds: number): DlDateTimePickerModel;\n    /**\n     * Move the active `year` one decade `down` from the specified moment in time.\n     *\n     * The `active` year will be the January 1 `ten (10) years after` the specified milliseconds.\n     * This moves the `active` date one `page` `down` from the current `year` view.\n     *\n     * Paging `down` will result in the `active` year being part of a different decade than\n     * the specified `fromMilliseconds`. As a result, the decade represented by the model\n     * will change to show the correct decade.\n     *\n     * @param fromMilliseconds\n     *  the moment in time from which the next `year` model page `down` will be constructed.\n     * @param selectedMilliseconds\n     *  the current value of the date/time picker.\n     * @returns\n     *  model containing an `active` `year` one decade `down` from the specified moment in time.\n     */\n    pageDown(fromMilliseconds: number, selectedMilliseconds: number): DlDateTimePickerModel;\n    /**\n     * Move the active `year` one decade `up` from the specified moment in time.\n     *\n     * The `active` year will be the January 1 `ten (10) years before` the specified milliseconds.\n     * This moves the `active` date one `page-up` from the current `year` view.\n     *\n     * Paging `up` will result in the `active` year being part of a different decade than\n     * the specified `fromMilliseconds`. As a result, the decade represented by the model\n     * will change to show the correct decade.\n     *\n     * @param fromMilliseconds\n     *  the moment in time from which the next `year` model page `up` will be constructed.\n     * @param selectedMilliseconds\n     *  the current value of the date/time picker.\n     * @returns\n     *  model containing an `active` `year` one decade `up` from the specified moment in time.\n     */\n    pageUp(fromMilliseconds: number, selectedMilliseconds: number): DlDateTimePickerModel;\n    /**\n     * Move the `active` `year` to the `last` year in the decade.\n     *\n     * The view or time range will not change unless the `fromMilliseconds` value\n     * is in a different decade than the displayed decade.\n     *\n     * @param fromMilliseconds\n     *  the moment in time from which the `last` active `year` will be calculated.\n     * @param selectedMilliseconds\n     *  the current value of the date/time picker.\n     * @returns\n     *  a model with the `last` cell in the view as the active `year`.\n     */\n    goEnd(fromMilliseconds: number, selectedMilliseconds: number): DlDateTimePickerModel;\n    /**\n     * Move the `active` `year` to the `first` year in the decade.\n     *\n     * The view or time range will not change unless the `fromMilliseconds` value\n     * is in a different decade than the displayed decade.\n     *\n     * @param fromMilliseconds\n     *  the moment in time from which the `first` active `year` will be calculated.\n     * @param selectedMilliseconds\n     *  the current value of the date/time picker.\n     * @returns\n     *  a model with the `first` cell in the view as the active `year`.\n     */\n    goHome(fromMilliseconds: number, selectedMilliseconds: number): DlDateTimePickerModel;\n}\n"]}