import * as tslib_1 from "tslib";
import { NgModule } from '@angular/core';
import { DlDateAdapter } from './dl-date-adapter';
import { DlDateAdapterMoment } from './dl-date-adapter-moment';
import { DlDateAdapterNative } from './dl-date-adapter-native';
import { DlDateAdapterNumber } from './dl-date-adapter-number';
import { DlDateAdapterString } from './dl-date-adapter-string';
import { DL_DATE_TIME_DISPLAY_FORMAT, DL_DATE_TIME_DISPLAY_FORMAT_DEFAULT, DL_DATE_TIME_INPUT_FORMATS, DL_DATE_TIME_INPUT_FORMATS_DEFAULT, DL_DATE_TIME_MODEL_FORMAT, DL_DATE_TIME_MODEL_FORMAT_DEFAULT } from './dl-date-time-string-format';
const ɵ0 = DL_DATE_TIME_DISPLAY_FORMAT_DEFAULT, ɵ1 = DL_DATE_TIME_INPUT_FORMATS_DEFAULT, ɵ2 = DL_DATE_TIME_MODEL_FORMAT_DEFAULT;
/**
 * Import this module to supply your own `DateAdapter` provider.
 * @internal
 **/
let DlDateTimeCoreModule = class DlDateTimeCoreModule {
};
DlDateTimeCoreModule = tslib_1.__decorate([
    NgModule({
        providers: [
            { provide: DL_DATE_TIME_DISPLAY_FORMAT, useValue: ɵ0 },
            { provide: DL_DATE_TIME_INPUT_FORMATS, useValue: ɵ1 },
            { provide: DL_DATE_TIME_MODEL_FORMAT, useValue: ɵ2 }
        ]
    })
], DlDateTimeCoreModule);
export { DlDateTimeCoreModule };
/**
 * Import this module to store `milliseconds` in the model.
 * @internal
 */
let DlDateTimeNumberModule = class DlDateTimeNumberModule {
};
DlDateTimeNumberModule = tslib_1.__decorate([
    NgModule({
        imports: [DlDateTimeCoreModule],
        providers: [
            { provide: DlDateAdapter, useClass: DlDateAdapterNumber }
        ],
        exports: [DlDateTimeCoreModule]
    })
], DlDateTimeNumberModule);
export { DlDateTimeNumberModule };
/**
 * Import this module to store a native JavaScript `Date` in the model.
 * @internal
 */
let DlDateTimeDateModule = class DlDateTimeDateModule {
};
DlDateTimeDateModule = tslib_1.__decorate([
    NgModule({
        imports: [DlDateTimeCoreModule],
        providers: [
            { provide: DlDateAdapter, useClass: DlDateAdapterNative }
        ],
    })
], DlDateTimeDateModule);
export { DlDateTimeDateModule };
/**
 * Import this module to store a `moment` in the model.
 * @internal
 */
let DlDateTimeMomentModule = class DlDateTimeMomentModule {
};
DlDateTimeMomentModule = tslib_1.__decorate([
    NgModule({
        imports: [DlDateTimeCoreModule],
        providers: [
            { provide: DlDateAdapter, useClass: DlDateAdapterMoment }
        ],
    })
], DlDateTimeMomentModule);
export { DlDateTimeMomentModule };
const ɵ3 = DL_DATE_TIME_INPUT_FORMATS_DEFAULT, ɵ4 = DL_DATE_TIME_DISPLAY_FORMAT_DEFAULT;
/**
 * Import this module to store a `string` in the model.
 * @internal
 */
let DlDateTimeStringModule = class DlDateTimeStringModule {
};
DlDateTimeStringModule = tslib_1.__decorate([
    NgModule({
        imports: [DlDateTimeCoreModule],
        providers: [
            { provide: DL_DATE_TIME_INPUT_FORMATS, useValue: ɵ3 },
            { provide: DL_DATE_TIME_MODEL_FORMAT, useValue: ɵ4 },
            { provide: DlDateAdapter, useClass: DlDateAdapterString }
        ],
    })
], DlDateTimeStringModule);
export { DlDateTimeStringModule };
export { ɵ0, ɵ1, ɵ2, ɵ3, ɵ4 };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGwtZGF0ZS10aW1lLWNvcmUubW9kdWxlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vYW5ndWxhci1ib290c3RyYXAtZGF0ZXRpbWVwaWNrZXIvIiwic291cmNlcyI6WyJjb3JlL2RsLWRhdGUtdGltZS1jb3JlLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFDLFFBQVEsRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUN2QyxPQUFPLEVBQUMsYUFBYSxFQUFDLE1BQU0sbUJBQW1CLENBQUM7QUFDaEQsT0FBTyxFQUFDLG1CQUFtQixFQUFDLE1BQU0sMEJBQTBCLENBQUM7QUFDN0QsT0FBTyxFQUFDLG1CQUFtQixFQUFDLE1BQU0sMEJBQTBCLENBQUM7QUFDN0QsT0FBTyxFQUFDLG1CQUFtQixFQUFDLE1BQU0sMEJBQTBCLENBQUM7QUFDN0QsT0FBTyxFQUFDLG1CQUFtQixFQUFDLE1BQU0sMEJBQTBCLENBQUM7QUFDN0QsT0FBTyxFQUNMLDJCQUEyQixFQUMzQixtQ0FBbUMsRUFDbkMsMEJBQTBCLEVBQzFCLGtDQUFrQyxFQUNsQyx5QkFBeUIsRUFDekIsaUNBQWlDLEVBQ2xDLE1BQU0sOEJBQThCLENBQUM7V0FRZSxtQ0FBbUMsT0FDcEMsa0NBQWtDLE9BQ25DLGlDQUFpQztBQVJwRjs7O0lBR0k7QUFRSixJQUFhLG9CQUFvQixHQUFqQyxNQUFhLG9CQUFvQjtDQUNoQyxDQUFBO0FBRFksb0JBQW9CO0lBUGhDLFFBQVEsQ0FBQztRQUNSLFNBQVMsRUFBRTtZQUNULEVBQUMsT0FBTyxFQUFFLDJCQUEyQixFQUFFLFFBQVEsSUFBcUMsRUFBQztZQUNyRixFQUFDLE9BQU8sRUFBRSwwQkFBMEIsRUFBRSxRQUFRLElBQW9DLEVBQUM7WUFDbkYsRUFBQyxPQUFPLEVBQUUseUJBQXlCLEVBQUUsUUFBUSxJQUFtQyxFQUFDO1NBQ2xGO0tBQ0YsQ0FBQztHQUNXLG9CQUFvQixDQUNoQztTQURZLG9CQUFvQjtBQUdqQzs7O0dBR0c7QUFRSCxJQUFhLHNCQUFzQixHQUFuQyxNQUFhLHNCQUFzQjtDQUNsQyxDQUFBO0FBRFksc0JBQXNCO0lBUGxDLFFBQVEsQ0FBQztRQUNSLE9BQU8sRUFBRSxDQUFDLG9CQUFvQixDQUFDO1FBQy9CLFNBQVMsRUFBRTtZQUNULEVBQUMsT0FBTyxFQUFFLGFBQWEsRUFBRSxRQUFRLEVBQUUsbUJBQW1CLEVBQUM7U0FDeEQ7UUFDRCxPQUFPLEVBQUUsQ0FBQyxvQkFBb0IsQ0FBQztLQUNoQyxDQUFDO0dBQ1csc0JBQXNCLENBQ2xDO1NBRFksc0JBQXNCO0FBR25DOzs7R0FHRztBQU9ILElBQWEsb0JBQW9CLEdBQWpDLE1BQWEsb0JBQW9CO0NBQ2hDLENBQUE7QUFEWSxvQkFBb0I7SUFOaEMsUUFBUSxDQUFDO1FBQ1IsT0FBTyxFQUFFLENBQUMsb0JBQW9CLENBQUM7UUFDL0IsU0FBUyxFQUFFO1lBQ1QsRUFBQyxPQUFPLEVBQUUsYUFBYSxFQUFFLFFBQVEsRUFBRSxtQkFBbUIsRUFBQztTQUN4RDtLQUNGLENBQUM7R0FDVyxvQkFBb0IsQ0FDaEM7U0FEWSxvQkFBb0I7QUFHakM7OztHQUdHO0FBT0gsSUFBYSxzQkFBc0IsR0FBbkMsTUFBYSxzQkFBc0I7Q0FDbEMsQ0FBQTtBQURZLHNCQUFzQjtJQU5sQyxRQUFRLENBQUM7UUFDUixPQUFPLEVBQUUsQ0FBQyxvQkFBb0IsQ0FBQztRQUMvQixTQUFTLEVBQUU7WUFDVCxFQUFDLE9BQU8sRUFBRSxhQUFhLEVBQUUsUUFBUSxFQUFFLG1CQUFtQixFQUFDO1NBQ3hEO0tBQ0YsQ0FBQztHQUNXLHNCQUFzQixDQUNsQztTQURZLHNCQUFzQjtXQVVpQixrQ0FBa0MsT0FDbkMsbUNBQW1DO0FBUnRGOzs7R0FHRztBQVNILElBQWEsc0JBQXNCLEdBQW5DLE1BQWEsc0JBQXNCO0NBQ2xDLENBQUE7QUFEWSxzQkFBc0I7SUFSbEMsUUFBUSxDQUFDO1FBQ1IsT0FBTyxFQUFFLENBQUMsb0JBQW9CLENBQUM7UUFDL0IsU0FBUyxFQUFFO1lBQ1QsRUFBQyxPQUFPLEVBQUUsMEJBQTBCLEVBQUUsUUFBUSxJQUFvQyxFQUFDO1lBQ25GLEVBQUMsT0FBTyxFQUFFLHlCQUF5QixFQUFFLFFBQVEsSUFBcUMsRUFBQztZQUNuRixFQUFDLE9BQU8sRUFBRSxhQUFhLEVBQUUsUUFBUSxFQUFFLG1CQUFtQixFQUFDO1NBQ3hEO0tBQ0YsQ0FBQztHQUNXLHNCQUFzQixDQUNsQztTQURZLHNCQUFzQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7TmdNb2R1bGV9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtEbERhdGVBZGFwdGVyfSBmcm9tICcuL2RsLWRhdGUtYWRhcHRlcic7XG5pbXBvcnQge0RsRGF0ZUFkYXB0ZXJNb21lbnR9IGZyb20gJy4vZGwtZGF0ZS1hZGFwdGVyLW1vbWVudCc7XG5pbXBvcnQge0RsRGF0ZUFkYXB0ZXJOYXRpdmV9IGZyb20gJy4vZGwtZGF0ZS1hZGFwdGVyLW5hdGl2ZSc7XG5pbXBvcnQge0RsRGF0ZUFkYXB0ZXJOdW1iZXJ9IGZyb20gJy4vZGwtZGF0ZS1hZGFwdGVyLW51bWJlcic7XG5pbXBvcnQge0RsRGF0ZUFkYXB0ZXJTdHJpbmd9IGZyb20gJy4vZGwtZGF0ZS1hZGFwdGVyLXN0cmluZyc7XG5pbXBvcnQge1xuICBETF9EQVRFX1RJTUVfRElTUExBWV9GT1JNQVQsXG4gIERMX0RBVEVfVElNRV9ESVNQTEFZX0ZPUk1BVF9ERUZBVUxULFxuICBETF9EQVRFX1RJTUVfSU5QVVRfRk9STUFUUyxcbiAgRExfREFURV9USU1FX0lOUFVUX0ZPUk1BVFNfREVGQVVMVCxcbiAgRExfREFURV9USU1FX01PREVMX0ZPUk1BVCxcbiAgRExfREFURV9USU1FX01PREVMX0ZPUk1BVF9ERUZBVUxUXG59IGZyb20gJy4vZGwtZGF0ZS10aW1lLXN0cmluZy1mb3JtYXQnO1xuXG4vKipcbiAqIEltcG9ydCB0aGlzIG1vZHVsZSB0byBzdXBwbHkgeW91ciBvd24gYERhdGVBZGFwdGVyYCBwcm92aWRlci5cbiAqIEBpbnRlcm5hbFxuICoqL1xuQE5nTW9kdWxlKHtcbiAgcHJvdmlkZXJzOiBbXG4gICAge3Byb3ZpZGU6IERMX0RBVEVfVElNRV9ESVNQTEFZX0ZPUk1BVCwgdXNlVmFsdWU6IERMX0RBVEVfVElNRV9ESVNQTEFZX0ZPUk1BVF9ERUZBVUxUfSxcbiAgICB7cHJvdmlkZTogRExfREFURV9USU1FX0lOUFVUX0ZPUk1BVFMsIHVzZVZhbHVlOiBETF9EQVRFX1RJTUVfSU5QVVRfRk9STUFUU19ERUZBVUxUfSxcbiAgICB7cHJvdmlkZTogRExfREFURV9USU1FX01PREVMX0ZPUk1BVCwgdXNlVmFsdWU6IERMX0RBVEVfVElNRV9NT0RFTF9GT1JNQVRfREVGQVVMVH1cbiAgXVxufSlcbmV4cG9ydCBjbGFzcyBEbERhdGVUaW1lQ29yZU1vZHVsZSB7XG59XG5cbi8qKlxuICogSW1wb3J0IHRoaXMgbW9kdWxlIHRvIHN0b3JlIGBtaWxsaXNlY29uZHNgIGluIHRoZSBtb2RlbC5cbiAqIEBpbnRlcm5hbFxuICovXG5ATmdNb2R1bGUoe1xuICBpbXBvcnRzOiBbRGxEYXRlVGltZUNvcmVNb2R1bGVdLFxuICBwcm92aWRlcnM6IFtcbiAgICB7cHJvdmlkZTogRGxEYXRlQWRhcHRlciwgdXNlQ2xhc3M6IERsRGF0ZUFkYXB0ZXJOdW1iZXJ9XG4gIF0sXG4gIGV4cG9ydHM6IFtEbERhdGVUaW1lQ29yZU1vZHVsZV1cbn0pXG5leHBvcnQgY2xhc3MgRGxEYXRlVGltZU51bWJlck1vZHVsZSB7XG59XG5cbi8qKlxuICogSW1wb3J0IHRoaXMgbW9kdWxlIHRvIHN0b3JlIGEgbmF0aXZlIEphdmFTY3JpcHQgYERhdGVgIGluIHRoZSBtb2RlbC5cbiAqIEBpbnRlcm5hbFxuICovXG5ATmdNb2R1bGUoe1xuICBpbXBvcnRzOiBbRGxEYXRlVGltZUNvcmVNb2R1bGVdLFxuICBwcm92aWRlcnM6IFtcbiAgICB7cHJvdmlkZTogRGxEYXRlQWRhcHRlciwgdXNlQ2xhc3M6IERsRGF0ZUFkYXB0ZXJOYXRpdmV9XG4gIF0sXG59KVxuZXhwb3J0IGNsYXNzIERsRGF0ZVRpbWVEYXRlTW9kdWxlIHtcbn1cblxuLyoqXG4gKiBJbXBvcnQgdGhpcyBtb2R1bGUgdG8gc3RvcmUgYSBgbW9tZW50YCBpbiB0aGUgbW9kZWwuXG4gKiBAaW50ZXJuYWxcbiAqL1xuQE5nTW9kdWxlKHtcbiAgaW1wb3J0czogW0RsRGF0ZVRpbWVDb3JlTW9kdWxlXSxcbiAgcHJvdmlkZXJzOiBbXG4gICAge3Byb3ZpZGU6IERsRGF0ZUFkYXB0ZXIsIHVzZUNsYXNzOiBEbERhdGVBZGFwdGVyTW9tZW50fVxuICBdLFxufSlcbmV4cG9ydCBjbGFzcyBEbERhdGVUaW1lTW9tZW50TW9kdWxlIHtcbn1cblxuLyoqXG4gKiBJbXBvcnQgdGhpcyBtb2R1bGUgdG8gc3RvcmUgYSBgc3RyaW5nYCBpbiB0aGUgbW9kZWwuXG4gKiBAaW50ZXJuYWxcbiAqL1xuQE5nTW9kdWxlKHtcbiAgaW1wb3J0czogW0RsRGF0ZVRpbWVDb3JlTW9kdWxlXSxcbiAgcHJvdmlkZXJzOiBbXG4gICAge3Byb3ZpZGU6IERMX0RBVEVfVElNRV9JTlBVVF9GT1JNQVRTLCB1c2VWYWx1ZTogRExfREFURV9USU1FX0lOUFVUX0ZPUk1BVFNfREVGQVVMVH0sXG4gICAge3Byb3ZpZGU6IERMX0RBVEVfVElNRV9NT0RFTF9GT1JNQVQsIHVzZVZhbHVlOiBETF9EQVRFX1RJTUVfRElTUExBWV9GT1JNQVRfREVGQVVMVH0sXG4gICAge3Byb3ZpZGU6IERsRGF0ZUFkYXB0ZXIsIHVzZUNsYXNzOiBEbERhdGVBZGFwdGVyU3RyaW5nfVxuICBdLFxufSlcbmV4cG9ydCBjbGFzcyBEbERhdGVUaW1lU3RyaW5nTW9kdWxlIHtcbn1cblxuIl19