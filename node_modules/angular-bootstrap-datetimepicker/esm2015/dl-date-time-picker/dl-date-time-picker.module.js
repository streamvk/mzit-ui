/**
 * @license
 * Copyright 2013-present Dale Lotts All Rights Reserved.
 * http://www.dalelotts.com
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/dalelotts/angular-bootstrap-datetimepicker/blob/master/LICENSE
 */
import * as tslib_1 from "tslib";
import { CommonModule } from '@angular/common';
import { NgModule } from '@angular/core';
import { DlDateTimePickerComponent } from './dl-date-time-picker.component';
import { DlDayModelProvider } from './dl-model-provider-day';
import { DlHourModelProvider } from './dl-model-provider-hour';
import { DlMinuteModelProvider } from './dl-model-provider-minute';
import { DlMonthModelProvider } from './dl-model-provider-month';
import { DlYearModelProvider } from './dl-model-provider-year';
/**
 * Import this module to supply your own `DateAdapter` provider.
 * @internal
 **/
let DlDateTimePickerModule = class DlDateTimePickerModule {
};
DlDateTimePickerModule = tslib_1.__decorate([
    NgModule({
        declarations: [DlDateTimePickerComponent],
        imports: [CommonModule],
        exports: [DlDateTimePickerComponent],
        providers: [
            DlYearModelProvider,
            DlMonthModelProvider,
            DlDayModelProvider,
            DlHourModelProvider,
            DlMinuteModelProvider
        ],
    })
], DlDateTimePickerModule);
export { DlDateTimePickerModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGwtZGF0ZS10aW1lLXBpY2tlci5tb2R1bGUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9hbmd1bGFyLWJvb3RzdHJhcC1kYXRldGltZXBpY2tlci8iLCJzb3VyY2VzIjpbImRsLWRhdGUtdGltZS1waWNrZXIvZGwtZGF0ZS10aW1lLXBpY2tlci5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7R0FPRzs7QUFFSCxPQUFPLEVBQUMsWUFBWSxFQUFDLE1BQU0saUJBQWlCLENBQUM7QUFDN0MsT0FBTyxFQUFDLFFBQVEsRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUN2QyxPQUFPLEVBQUMseUJBQXlCLEVBQUMsTUFBTSxpQ0FBaUMsQ0FBQztBQUMxRSxPQUFPLEVBQUMsa0JBQWtCLEVBQUMsTUFBTSx5QkFBeUIsQ0FBQztBQUMzRCxPQUFPLEVBQUMsbUJBQW1CLEVBQUMsTUFBTSwwQkFBMEIsQ0FBQztBQUM3RCxPQUFPLEVBQUMscUJBQXFCLEVBQUMsTUFBTSw0QkFBNEIsQ0FBQztBQUNqRSxPQUFPLEVBQUMsb0JBQW9CLEVBQUMsTUFBTSwyQkFBMkIsQ0FBQztBQUMvRCxPQUFPLEVBQUMsbUJBQW1CLEVBQUMsTUFBTSwwQkFBMEIsQ0FBQztBQUU3RDs7O0lBR0k7QUFhSixJQUFhLHNCQUFzQixHQUFuQyxNQUFhLHNCQUFzQjtDQUNsQyxDQUFBO0FBRFksc0JBQXNCO0lBWmxDLFFBQVEsQ0FBQztRQUNSLFlBQVksRUFBRSxDQUFDLHlCQUF5QixDQUFDO1FBQ3pDLE9BQU8sRUFBRSxDQUFDLFlBQVksQ0FBQztRQUN2QixPQUFPLEVBQUUsQ0FBQyx5QkFBeUIsQ0FBQztRQUNwQyxTQUFTLEVBQUU7WUFDVCxtQkFBbUI7WUFDbkIsb0JBQW9CO1lBQ3BCLGtCQUFrQjtZQUNsQixtQkFBbUI7WUFDbkIscUJBQXFCO1NBQ3RCO0tBQ0YsQ0FBQztHQUNXLHNCQUFzQixDQUNsQztTQURZLHNCQUFzQiIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDEzLXByZXNlbnQgRGFsZSBMb3R0cyBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICogaHR0cDovL3d3dy5kYWxlbG90dHMuY29tXG4gKlxuICogVXNlIG9mIHRoaXMgc291cmNlIGNvZGUgaXMgZ292ZXJuZWQgYnkgYW4gTUlULXN0eWxlIGxpY2Vuc2UgdGhhdCBjYW4gYmVcbiAqIGZvdW5kIGluIHRoZSBMSUNFTlNFIGZpbGUgYXQgaHR0cHM6Ly9naXRodWIuY29tL2RhbGVsb3R0cy9hbmd1bGFyLWJvb3RzdHJhcC1kYXRldGltZXBpY2tlci9ibG9iL21hc3Rlci9MSUNFTlNFXG4gKi9cblxuaW1wb3J0IHtDb21tb25Nb2R1bGV9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XG5pbXBvcnQge05nTW9kdWxlfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7RGxEYXRlVGltZVBpY2tlckNvbXBvbmVudH0gZnJvbSAnLi9kbC1kYXRlLXRpbWUtcGlja2VyLmNvbXBvbmVudCc7XG5pbXBvcnQge0RsRGF5TW9kZWxQcm92aWRlcn0gZnJvbSAnLi9kbC1tb2RlbC1wcm92aWRlci1kYXknO1xuaW1wb3J0IHtEbEhvdXJNb2RlbFByb3ZpZGVyfSBmcm9tICcuL2RsLW1vZGVsLXByb3ZpZGVyLWhvdXInO1xuaW1wb3J0IHtEbE1pbnV0ZU1vZGVsUHJvdmlkZXJ9IGZyb20gJy4vZGwtbW9kZWwtcHJvdmlkZXItbWludXRlJztcbmltcG9ydCB7RGxNb250aE1vZGVsUHJvdmlkZXJ9IGZyb20gJy4vZGwtbW9kZWwtcHJvdmlkZXItbW9udGgnO1xuaW1wb3J0IHtEbFllYXJNb2RlbFByb3ZpZGVyfSBmcm9tICcuL2RsLW1vZGVsLXByb3ZpZGVyLXllYXInO1xuXG4vKipcbiAqIEltcG9ydCB0aGlzIG1vZHVsZSB0byBzdXBwbHkgeW91ciBvd24gYERhdGVBZGFwdGVyYCBwcm92aWRlci5cbiAqIEBpbnRlcm5hbFxuICoqL1xuQE5nTW9kdWxlKHtcbiAgZGVjbGFyYXRpb25zOiBbRGxEYXRlVGltZVBpY2tlckNvbXBvbmVudF0sXG4gIGltcG9ydHM6IFtDb21tb25Nb2R1bGVdLFxuICBleHBvcnRzOiBbRGxEYXRlVGltZVBpY2tlckNvbXBvbmVudF0sXG4gIHByb3ZpZGVyczogW1xuICAgIERsWWVhck1vZGVsUHJvdmlkZXIsXG4gICAgRGxNb250aE1vZGVsUHJvdmlkZXIsXG4gICAgRGxEYXlNb2RlbFByb3ZpZGVyLFxuICAgIERsSG91ck1vZGVsUHJvdmlkZXIsXG4gICAgRGxNaW51dGVNb2RlbFByb3ZpZGVyXG4gIF0sXG59KVxuZXhwb3J0IGNsYXNzIERsRGF0ZVRpbWVQaWNrZXJNb2R1bGUge1xufVxuIl19